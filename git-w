#!/usr/bin/env bash
#
# @(#)git-w 0.0.1
# @(#)(c) 2019 redpeacock78
# @(#)GPLv3+ is applied to this script.
# @(#)
########################################
# @(#)It is a subcommand of the git command and displays github.com contribution.
# @(#)Grobals:
# @(#)  GRASS_DATA
# @(#)Arguments:
# @(#)  -u, --user [USER_NAME]
# @(#)  -g, --grass [ANY_CHARACTER]
# @(#)  -h, --help
# @(#)Returns:
# @(#)  None
# @(#)Depends:
# @(#)  MKTEMP
# @(#)  PRINTF
# @(#)  XARGS
# @(#)  BASH
# @(#)  CURL
# @(#)  GREP
# @(#)  SORT
# @(#)  UNIQ
# @(#)  ECHO
# @(#)  TRAP
# @(#)  GIT
# @(#)  SED
# @(#)  CAT
# @(#)  AWK
# @(#)  TR
########################################



####MESSAGES####
###SHOW_USAGE###
function usage(){
  {
   cat << EOS >&2
Usage: ${0##*/} [OPTION] [ANYTHING]
It is a subcommand of the git command and displays github.com contribution.

Option:
  -u, --user [USER_NAME]         Displays the contribution of the specified user
                                 (Default: git config --global user.name)
  -g, --grass [ANY_CHARACTER]    Displays contributions with the specified characters
                                 (Default: "W")
  -h, --help                     Show usage

TL;DR
  $ git w
  $ git -g '#'
  $ git --user hoge --grass 'w'
EOS
   exit 0
  }
}
###ERROR_MESSAGE###
function error(){
  {
   cat << ERR 1>&2
${0##*/}: Sorry. An error has occurred :_(
Refer 'git w -h' or 'git w --help' for how to use the command.
ERR
   exit 1
  }
}


####MAIN_PROCESSING####
function on_exit(){
  rm -rf "${GRASS_DATA}" && exit 0
}
function on_pre_exit(){
  rm -rf "${GRASS_DATA}" && \
  error && \
  exit 1
}
function get_grass_data(){
 declare -g GRASS_DATA="$(mktemp)"
 curl -s -o "${GRASS_DATA}" "https://github.com/users/${@}/contributions" || \
 {
  builtin echo "${0##*/}: Connect to a network line." && \
  on_pre_exit
 }
}
function extracting_y_axis(){
  cat "${GRASS_DATA}" \
  | grep '<rect class="day"' \
  | sed 's/^ *//g' \
  | awk '{print $6}' \
  | sort \
  | uniq \
  | tr -d 'y=' \
  | tr -d '"'
}
function glass_generate(){
  cat "${GRASS_DATA}" \
  | grep "y=\"${@}\"" \
  | sed 's/^ *//g' \
  | awk '{print $7}' \
  | sed 's/#196127/058/g;s/#239a3b/034/g;s/#7bc96f/035/g;s/#c6e48b/048/g;s/#ebedf0/250/g;s/fill=//g;s/"//g' \
  | xargs -n1 -I @ bash -c 'builtin echo -e "\e[38;5;@m${GRASS:-W}\e[m"'
}
function main(){
  {
   export -f glass_generate
   export GRASS="${GRASS}"
   export GRASS_DATA="${GRASS_DATA}"
   builtin echo "${USER_NAME}'s Contributions:" && \
   builtin echo "$(printf ="%.s" {1..57})" && \
   extracting_y_axis \
   | xargs -n1 -I @ bash -c 'builtin echo $(glass_generate @)' \
   | tr -d ' ' \
   | sed '1s/^/    /;2s/^/Mon /;3s/^/    /;4s/^/Wed /;5s/^/    /;6s/^/Fri /;7s/^/    /'
  }
}

function option_perse(){
  if [[ "${@}" == -h ]] || \
     [[ "${@}" == --help ]]; then
    usage
  elif [[ "${@}" =~ - ]]; then
    if [[ "${1}" == -u ]] || \
       [[ "${1}" == --user ]]; then
      shift && declare NAME="${1##-*}"
      if [[ -z "${NAME}" ]]; then
        error
      elif [[ "${2}" == -g ]] || \
           [[ "${2}" == --grass ]]; then
        shift && declare GRASS="${2}"
        if [[ -z "${GRASS}" ]]; then
          error
        fi
      elif [[ -z "${2}" ]]; then
        :
      elif [[ ! "${2}" == -g ]] || \
           [[ ! "${2}" == --grass ]]; then
        error
      fi
    elif [[ "${1}" == -g ]] || \
         [[ "${1}" == --grass ]]; then
      shift && declare GRASS="${1##-*}"
      if [[ -z "${GRASS}" ]]; then
        error
      elif [[ "${2}" == -u ]] || \
           [[ "${2}" == --user ]]; then
        shift && declare NAME="${2}"
        if [[ -z "${NAME}" ]]; then
          error
        fi
      elif [[ -z "${2}" ]]; then
        :
      elif [[ ! "${2}" == -u ]] || \
           [[ ! "${2}" == --user ]]; then
        error
      fi
    else
      error
    fi
  elif [[ -z "${1}" ]]; then
    :
  else
    error
  fi
  {
   declare USER_NAME="${NAME:-$(git config --global user.name)}"
   get_grass_data "${USER_NAME}" && \
   builtin echo -e "$(main ${GRASS})"
  }
}

{
 trap on_pre_exit HUP INT QUIT TERM
 option_perse "${@}"
 trap on_exit EXIT
}
